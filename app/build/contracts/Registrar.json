{
  "contractName": "Registrar",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "addrLookup",
      "outputs": [
        {
          "name": "identifier",
          "type": "string"
        },
        {
          "name": "description",
          "type": "string"
        },
        {
          "name": "role",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "name": "IDlookup",
      "outputs": [
        {
          "name": "ethAddr",
          "type": "address"
        },
        {
          "name": "description",
          "type": "string"
        },
        {
          "name": "role",
          "type": "uint8"
        },
        {
          "name": "summContract",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "identifier",
          "type": "string"
        },
        {
          "name": "newUser",
          "type": "address"
        },
        {
          "name": "desc",
          "type": "string"
        },
        {
          "name": "roleIN",
          "type": "uint8"
        }
      ],
      "name": "registerUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"identifier\",\"type\":\"string\"},{\"name\":\"newUser\",\"type\":\"address\"},{\"name\":\"desc\",\"type\":\"string\"},{\"name\":\"roleIN\",\"type\":\"uint8\"}],\"name\":\"registerUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"addrLookup\",\"outputs\":[{\"name\":\"identifier\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"role\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"string\"}],\"name\":\"IDlookup\",\"outputs\":[{\"name\":\"ethAddr\",\"type\":\"address\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"role\",\"type\":\"uint8\"},{\"name\":\"summContract\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/mirashah/Documents/crowdmed/app/contracts/Registrar.sol\":\"Registrar\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/mirashah/Documents/crowdmed/app/contracts/Registrar.sol\":{\"keccak256\":\"0x270ba9d953020054dd6f6ad1e5e6f8815702b98214348c30ee95011555e074f1\",\"urls\":[\"bzzr://a74563b849fe1d7c8dd491fcdd40c975ff3d014e38a6ebb3e49bf5aa53612c04\"]},\"/Users/mirashah/Documents/crowdmed/app/contracts/Summary.sol\":{\"keccak256\":\"0x0bead1bec38a7c4745843ac337aa7a38fe9e57835937ff1514afa26333effa5a\",\"urls\":[\"bzzr://c945de38922fdad8ad013c25fb13c7527dacce4e16ca52ede7b363061ce9a42f\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612921806100606000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063718ac217146100515780638da5cb5b146101d0578063a01a0bbc1461021a578063f9f880f314610350575b600080fd5b6101ce6004803603608081101561006757600080fd5b810190808035906020019064010000000081111561008457600080fd5b82018360208201111561009657600080fd5b803590602001918460018302840111640100000000831117156100b857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561013b57600080fd5b82018360208201111561014d57600080fd5b8035906020019184600183028401116401000000008311171561016f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff1690602001909291905050506104f7565b005b6101d86107fe565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61025c6004803603602081101561023057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610823565b6040518080602001806020018460ff1660ff168152602001838103835286818151815260200191508051906020019080838360005b838110156102ac578082015181840152602081019050610291565b50505050905090810190601f1680156102d95780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b838110156103125780820151818401526020810190506102f7565b50505050905090810190601f16801561033f5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b6104096004803603602081101561036657600080fd5b810190808035906020019064010000000081111561038357600080fd5b82018360208201111561039557600080fd5b803590602001918460018302840111640100000000831117156103b757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061098a565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018460ff1660ff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825285818151815260200191508051906020019080838360005b838110156104b957808201518184015260208101905061049e565b50505050905090810190601f1680156104e65780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461055057600080fd5b60008360405161055f90610ab5565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f0801580156105b1573d6000803e3d6000fd5b50905060405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018360ff1681526020018273ffffffffffffffffffffffffffffffffffffffff168152506001866040518082805190602001908083835b6020831061063a5780518252602082019150602081019050602083039250610617565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906106d0929190610ac2565b5060408201518160020160006101000a81548160ff021916908360ff16021790555060608201518160020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060405180606001604052808681526020018481526020018360ff16815250600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906107b5929190610ac2565b5060208201518160010190805190602001906107d2929190610ac2565b5060408201518160020160006101000a81548160ff021916908360ff1602179055509050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108cf5780601f106108a4576101008083540402835291602001916108cf565b820191906000526020600020905b8154815290600101906020018083116108b257829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561096d5780601f106109425761010080835404028352916020019161096d565b820191906000526020600020905b81548152906001019060200180831161095057829003601f168201915b5050505050908060020160009054906101000a900460ff16905083565b6001818051602081018201805184825260208301602085012081835280955050505050506000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a725780601f10610a4757610100808354040283529160200191610a72565b820191906000526020600020905b815481529060010190602001808311610a5557829003601f168201915b5050505050908060020160009054906101000a900460ff16908060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b611d8e80610b6883390190565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610b0357805160ff1916838001178555610b31565b82800160010185558215610b31579182015b82811115610b30578251825591602001919060010190610b15565b5b509050610b3e9190610b42565b5090565b610b6491905b80821115610b60576000816000905550600101610b48565b5090565b9056fe60806040523480156200001157600080fd5b5060405160208062001d8e833981018060405260208110156200003357600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060058060018154018082558091505090600182039060005260206000200160006040518060200160405280600081525090919091509080519060200190620000ce929190620000ff565b50506040518060200160405280600081525060069080519060200190620000f7929190620000ff565b5050620001ae565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200014257805160ff191683800117855562000173565b8280016001018555821562000173579182015b828111156200017257825182559160200191906001019062000155565b5b50905062000182919062000186565b5090565b620001ab91905b80821115620001a75760008160009055506001016200018d565b5090565b90565b611bd080620001be6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806346a685a9116100ad578063bef4562511610071578063bef4562514610923578063c8be2978146109a6578063cb828f6614610a05578063d956bcdf14610a88578063fa52404614610a9257610121565b806346a685a91461078957806352c5b8be146107a75780638b45188a1461084e5780638da5cb5b146108bb578063b5d1990d1461090557610121565b806322aa6b87116100f457806322aa6b87146104ca57806322f66a9b1461051857806325caf9ff146105865780632e128e60146106415780633aaa93de146106c457610121565b8063050c7a4614610126578063069bdeca146102785780630b89d985146102c95780631ccda3e61461040f575b600080fd5b6102766004803603604081101561013c57600080fd5b810190808035906020019064010000000081111561015957600080fd5b82018360208201111561016b57600080fd5b8035906020019184600183028401116401000000008311171561018d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156101f057600080fd5b82018360208201111561020257600080fd5b8035906020019184600183028401116401000000008311171561022457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610ae0565b005b6102c76004803603604081101561028e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050610c35565b005b6102f5600480360360208110156102df57600080fd5b8101908080359060200190929190505050610cff565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561036b578082015181840152602081019050610350565b50505050905090810190601f1680156103985780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156103d15780820151818401526020810190506103b6565b50505050905090810190601f1680156103fe5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b6104c86004803603602081101561042557600080fd5b810190808035906020019064010000000081111561044257600080fd5b82018360208201111561045457600080fd5b8035906020019184600183028401116401000000008311171561047657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610e86565b005b610516600480360360408110156104e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f4d565b005b6105446004803603602081101561052e57600080fd5b8101908080359060200190929190505050611054565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61063f6004803603602081101561059c57600080fd5b81019080803590602001906401000000008111156105b957600080fd5b8201836020820111156105cb57600080fd5b803590602001918460018302840111640100000000831117156105ed57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611090565b005b61064961112f565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561068957808201518184015260208101905061066e565b50505050905090810190601f1680156106b65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610787600480360360408110156106da57600080fd5b81019080803590602001909291908035906020019064010000000081111561070157600080fd5b82018360208201111561071357600080fd5b8035906020019184600183028401116401000000008311171561073557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061122a565b005b6107916112ea565b6040518082815260200191505060405180910390f35b6107d3600480360360208110156107bd57600080fd5b81019080803590602001909291905050506112f7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108135780820151818401526020810190506107f8565b50505050905090810190601f1680156108405780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6108906004803603602081101561086457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113b0565b604051808381526020018260028111156108a657fe5b60ff1681526020019250505060405180910390f35b6108c36113e1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61090d611406565b6040518082815260200191505060405180910390f35b61092b61140c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561096b578082015181840152602081019050610950565b50505050905090810190601f1680156109985780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6109ae611574565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156109f15780820151818401526020810190506109d6565b505050509050019250505060405180910390f35b610a0d611602565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a4d578082015181840152602081019050610a32565b50505050905090810190601f168015610a7a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610a90611707565b005b610ade60048036036040811015610aa857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118c3565b005b600360405180606001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610ba1929190611a7f565b506040820151816002019080519060200190610bbe929190611a7f565b505050506003805490506004819055507f714dee91a0b3ace9344ba333209d99bb5f628f8f071e050113c7788eec52667833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff02191690836002811115610c9357fe5b02179055507f9c3abede93ba4f608c4758eea50a3a58d1951623ba0fbce37f11b87ec721c8c982604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b60038181548110610d0c57fe5b90600052602060002090600302016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dde5780601f10610db357610100808354040283529160200191610dde565b820191906000526020600020905b815481529060010190602001808311610dc157829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e7c5780601f10610e5157610100808354040283529160200191610e7c565b820191906000526020600020905b815481529060010190602001808311610e5f57829003601f168201915b5050505050905083565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610edf57600080fd5b6005819080600181540180825580915050906001820390600052602060002001600090919290919091509080519060200190610f1c929190611aff565b50507f54d9d3281424c159fa7a4fb4d481e5e2365a93caa3a676870bb9500196df7c2160405160405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fa657600080fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055507f6802d7856a40188476a3fea2a36fcf3e48837eda8dba2a5cf25a11144bcf012382604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b6002818154811061106157fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110e957600080fd5b80600690805190602001906110ff929190611aff565b507f3f924a9e0fb0c37e791dd0e0f4e2d06de3f6092f02229d954534bceeb09e12fd60405160405180910390a150565b60606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461118a57600080fd5b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112205780601f106111f557610100808354040283529160200191611220565b820191906000526020600020905b81548152906001019060200180831161120357829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461128357600080fd5b806005838154811061129157fe5b9060005260206000200190805190602001906112ae929190611aff565b507f26b429d628dcad2905cf4be0d8a0caad91d06b4dcb4840b73962f8004383fbce826040518082815260200191505060405180910390a15050565b6000600580549050905090565b6005818154811061130457fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113a85780601f1061137d576101008083540402835291602001916113a8565b820191906000526020600020905b81548152906001019060200180831161138b57829003601f168201915b505050505081565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16905082565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b60606000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905060606005828154811061146457fe5b906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115025780601f106114d757610100808354040283529160200191611502565b820191906000526020600020905b8154815290600101906020018083116114e557829003601f168201915b505050505090507f1258ff30164e00e0d6196e242aed85ae3749a7686041d397bc7becd50e3f5d3233604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1809250505090565b606060028054806020026020016040519081016040528092919081815260200182805480156115f857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116115ae575b5050505050905090565b60607f1258ff30164e00e0d6196e242aed85ae3749a7686041d397bc7becd50e3f5d3233604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a160068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116fd5780601f106116d2576101008083540402835291602001916116fd565b820191906000526020600020905b8154815290600101906020018083116116e057829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561176157600080fd5b6040518060400160405280600081526020016001600281111561178057fe5b815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff021916908360028111156117f057fe5b021790555090505060023390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507fb00fbd3008c57ed10bff5f7cec503dd997e1c0fdd38f71e3d406914be839c9b633604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461191c57600080fd5b60405180604001604052808281526020016000600281111561193a57fe5b815250600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff021916908360028111156119aa57fe5b021790555090505060028290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507fb00fbd3008c57ed10bff5f7cec503dd997e1c0fdd38f71e3d406914be839c9b682604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611ac057805160ff1916838001178555611aee565b82800160010185558215611aee579182015b82811115611aed578251825591602001919060010190611ad2565b5b509050611afb9190611b7f565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611b4057805160ff1916838001178555611b6e565b82800160010185558215611b6e579182015b82811115611b6d578251825591602001919060010190611b52565b5b509050611b7b9190611b7f565b5090565b611ba191905b80821115611b9d576000816000905550600101611b85565b5090565b9056fea165627a7a7230582092c82546e67c61ec3e63c50c2020e3e23a9fb26e5cf9ee5b84294df5aedbf88a0029a165627a7a723058200c1c7f458fe9f2a7fdddc8d534b4b077915ea409ba3e9d7884ee01b6a7e9dead0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063718ac217146100515780638da5cb5b146101d0578063a01a0bbc1461021a578063f9f880f314610350575b600080fd5b6101ce6004803603608081101561006757600080fd5b810190808035906020019064010000000081111561008457600080fd5b82018360208201111561009657600080fd5b803590602001918460018302840111640100000000831117156100b857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561013b57600080fd5b82018360208201111561014d57600080fd5b8035906020019184600183028401116401000000008311171561016f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff1690602001909291905050506104f7565b005b6101d86107fe565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61025c6004803603602081101561023057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610823565b6040518080602001806020018460ff1660ff168152602001838103835286818151815260200191508051906020019080838360005b838110156102ac578082015181840152602081019050610291565b50505050905090810190601f1680156102d95780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b838110156103125780820151818401526020810190506102f7565b50505050905090810190601f16801561033f5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b6104096004803603602081101561036657600080fd5b810190808035906020019064010000000081111561038357600080fd5b82018360208201111561039557600080fd5b803590602001918460018302840111640100000000831117156103b757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061098a565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018460ff1660ff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825285818151815260200191508051906020019080838360005b838110156104b957808201518184015260208101905061049e565b50505050905090810190601f1680156104e65780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461055057600080fd5b60008360405161055f90610ab5565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f0801580156105b1573d6000803e3d6000fd5b50905060405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018360ff1681526020018273ffffffffffffffffffffffffffffffffffffffff168152506001866040518082805190602001908083835b6020831061063a5780518252602082019150602081019050602083039250610617565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906106d0929190610ac2565b5060408201518160020160006101000a81548160ff021916908360ff16021790555060608201518160020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060405180606001604052808681526020018481526020018360ff16815250600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906107b5929190610ac2565b5060208201518160010190805190602001906107d2929190610ac2565b5060408201518160020160006101000a81548160ff021916908360ff1602179055509050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108cf5780601f106108a4576101008083540402835291602001916108cf565b820191906000526020600020905b8154815290600101906020018083116108b257829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561096d5780601f106109425761010080835404028352916020019161096d565b820191906000526020600020905b81548152906001019060200180831161095057829003601f168201915b5050505050908060020160009054906101000a900460ff16905083565b6001818051602081018201805184825260208301602085012081835280955050505050506000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a725780601f10610a4757610100808354040283529160200191610a72565b820191906000526020600020905b815481529060010190602001808311610a5557829003601f168201915b5050505050908060020160009054906101000a900460ff16908060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b611d8e80610b6883390190565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610b0357805160ff1916838001178555610b31565b82800160010185558215610b31579182015b82811115610b30578251825591602001919060010190610b15565b5b509050610b3e9190610b42565b5090565b610b6491905b80821115610b60576000816000905550600101610b48565b5090565b9056fe60806040523480156200001157600080fd5b5060405160208062001d8e833981018060405260208110156200003357600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060058060018154018082558091505090600182039060005260206000200160006040518060200160405280600081525090919091509080519060200190620000ce929190620000ff565b50506040518060200160405280600081525060069080519060200190620000f7929190620000ff565b5050620001ae565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200014257805160ff191683800117855562000173565b8280016001018555821562000173579182015b828111156200017257825182559160200191906001019062000155565b5b50905062000182919062000186565b5090565b620001ab91905b80821115620001a75760008160009055506001016200018d565b5090565b90565b611bd080620001be6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806346a685a9116100ad578063bef4562511610071578063bef4562514610923578063c8be2978146109a6578063cb828f6614610a05578063d956bcdf14610a88578063fa52404614610a9257610121565b806346a685a91461078957806352c5b8be146107a75780638b45188a1461084e5780638da5cb5b146108bb578063b5d1990d1461090557610121565b806322aa6b87116100f457806322aa6b87146104ca57806322f66a9b1461051857806325caf9ff146105865780632e128e60146106415780633aaa93de146106c457610121565b8063050c7a4614610126578063069bdeca146102785780630b89d985146102c95780631ccda3e61461040f575b600080fd5b6102766004803603604081101561013c57600080fd5b810190808035906020019064010000000081111561015957600080fd5b82018360208201111561016b57600080fd5b8035906020019184600183028401116401000000008311171561018d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156101f057600080fd5b82018360208201111561020257600080fd5b8035906020019184600183028401116401000000008311171561022457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610ae0565b005b6102c76004803603604081101561028e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050610c35565b005b6102f5600480360360208110156102df57600080fd5b8101908080359060200190929190505050610cff565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561036b578082015181840152602081019050610350565b50505050905090810190601f1680156103985780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156103d15780820151818401526020810190506103b6565b50505050905090810190601f1680156103fe5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b6104c86004803603602081101561042557600080fd5b810190808035906020019064010000000081111561044257600080fd5b82018360208201111561045457600080fd5b8035906020019184600183028401116401000000008311171561047657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610e86565b005b610516600480360360408110156104e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610f4d565b005b6105446004803603602081101561052e57600080fd5b8101908080359060200190929190505050611054565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61063f6004803603602081101561059c57600080fd5b81019080803590602001906401000000008111156105b957600080fd5b8201836020820111156105cb57600080fd5b803590602001918460018302840111640100000000831117156105ed57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611090565b005b61064961112f565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561068957808201518184015260208101905061066e565b50505050905090810190601f1680156106b65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610787600480360360408110156106da57600080fd5b81019080803590602001909291908035906020019064010000000081111561070157600080fd5b82018360208201111561071357600080fd5b8035906020019184600183028401116401000000008311171561073557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061122a565b005b6107916112ea565b6040518082815260200191505060405180910390f35b6107d3600480360360208110156107bd57600080fd5b81019080803590602001909291905050506112f7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108135780820151818401526020810190506107f8565b50505050905090810190601f1680156108405780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6108906004803603602081101561086457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113b0565b604051808381526020018260028111156108a657fe5b60ff1681526020019250505060405180910390f35b6108c36113e1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61090d611406565b6040518082815260200191505060405180910390f35b61092b61140c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561096b578082015181840152602081019050610950565b50505050905090810190601f1680156109985780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6109ae611574565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156109f15780820151818401526020810190506109d6565b505050509050019250505060405180910390f35b610a0d611602565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a4d578082015181840152602081019050610a32565b50505050905090810190601f168015610a7a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610a90611707565b005b610ade60048036036040811015610aa857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118c3565b005b600360405180606001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610ba1929190611a7f565b506040820151816002019080519060200190610bbe929190611a7f565b505050506003805490506004819055507f714dee91a0b3ace9344ba333209d99bb5f628f8f071e050113c7788eec52667833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff02191690836002811115610c9357fe5b02179055507f9c3abede93ba4f608c4758eea50a3a58d1951623ba0fbce37f11b87ec721c8c982604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b60038181548110610d0c57fe5b90600052602060002090600302016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610dde5780601f10610db357610100808354040283529160200191610dde565b820191906000526020600020905b815481529060010190602001808311610dc157829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e7c5780601f10610e5157610100808354040283529160200191610e7c565b820191906000526020600020905b815481529060010190602001808311610e5f57829003601f168201915b5050505050905083565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610edf57600080fd5b6005819080600181540180825580915050906001820390600052602060002001600090919290919091509080519060200190610f1c929190611aff565b50507f54d9d3281424c159fa7a4fb4d481e5e2365a93caa3a676870bb9500196df7c2160405160405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fa657600080fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055507f6802d7856a40188476a3fea2a36fcf3e48837eda8dba2a5cf25a11144bcf012382604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b6002818154811061106157fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110e957600080fd5b80600690805190602001906110ff929190611aff565b507f3f924a9e0fb0c37e791dd0e0f4e2d06de3f6092f02229d954534bceeb09e12fd60405160405180910390a150565b60606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461118a57600080fd5b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112205780601f106111f557610100808354040283529160200191611220565b820191906000526020600020905b81548152906001019060200180831161120357829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461128357600080fd5b806005838154811061129157fe5b9060005260206000200190805190602001906112ae929190611aff565b507f26b429d628dcad2905cf4be0d8a0caad91d06b4dcb4840b73962f8004383fbce826040518082815260200191505060405180910390a15050565b6000600580549050905090565b6005818154811061130457fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113a85780601f1061137d576101008083540402835291602001916113a8565b820191906000526020600020905b81548152906001019060200180831161138b57829003601f168201915b505050505081565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16905082565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b60606000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905060606005828154811061146457fe5b906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115025780601f106114d757610100808354040283529160200191611502565b820191906000526020600020905b8154815290600101906020018083116114e557829003601f168201915b505050505090507f1258ff30164e00e0d6196e242aed85ae3749a7686041d397bc7becd50e3f5d3233604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1809250505090565b606060028054806020026020016040519081016040528092919081815260200182805480156115f857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116115ae575b5050505050905090565b60607f1258ff30164e00e0d6196e242aed85ae3749a7686041d397bc7becd50e3f5d3233604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a160068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116fd5780601f106116d2576101008083540402835291602001916116fd565b820191906000526020600020905b8154815290600101906020018083116116e057829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561176157600080fd5b6040518060400160405280600081526020016001600281111561178057fe5b815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff021916908360028111156117f057fe5b021790555090505060023390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507fb00fbd3008c57ed10bff5f7cec503dd997e1c0fdd38f71e3d406914be839c9b633604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461191c57600080fd5b60405180604001604052808281526020016000600281111561193a57fe5b815250600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff021916908360028111156119aa57fe5b021790555090505060028290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550507fb00fbd3008c57ed10bff5f7cec503dd997e1c0fdd38f71e3d406914be839c9b682604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611ac057805160ff1916838001178555611aee565b82800160010185558215611aee579182015b82811115611aed578251825591602001919060010190611ad2565b5b509050611afb9190611b7f565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611b4057805160ff1916838001178555611b6e565b82800160010185558215611b6e579182015b82811115611b6d578251825591602001919060010190611b52565b5b509050611b7b9190611b7f565b5090565b611ba191905b80821115611b9d576000816000905550600101611b85565b5090565b9056fea165627a7a7230582092c82546e67c61ec3e63c50c2020e3e23a9fb26e5cf9ee5b84294df5aedbf88a0029a165627a7a723058200c1c7f458fe9f2a7fdddc8d534b4b077915ea409ba3e9d7884ee01b6a7e9dead0029",
  "sourceMap": "212:1121:2:-;;;729:47;8:9:-1;5:2;;;30:1;27;20:12;5:2;729:47:2;762:10;754:5;;:18;;;;;;;;;;;;;;;;;;212:1121;;;;;;",
  "deployedSourceMap": "212:1121:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;212:1121:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;909:422;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;909:422:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;909:422:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;909:422:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;909:422:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;909:422:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;909:422:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;909:422:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;909:422:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;909:422:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;235:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;619:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;619:46:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;619:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;619:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;573:41;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;573:41:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;573:41:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;573:41:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;573:41:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;573:41:2;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;573:41:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;909:422;1041:5;;;;;;;;;;;1027:19;;:10;:19;;;1019:28;;;;;;1125:14;1156:7;1142:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1142:22:2;1125:39;;1191:35;;;;;;;;1198:7;1191:35;;;;;;1207:4;1191:35;;;;1213:6;1191:35;;;;;;1221:4;1191:35;;;;;1168:8;1177:10;1168:20;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1168:20:2;;;;;;;;;;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1252:34;;;;;;;;1261:10;1252:34;;;;1273:4;1252:34;;;;1279:6;1252:34;;;;;1230:10;:19;1241:7;1230:19;;;;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;909:422;;;;;:::o;235:20::-;;;;;;;;;;;;;:::o;619:46::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;573:41::-;;;28:7:-1;22:14;169:4;160:7;156:18;147:7;143:32;204:13;198:20;246:8;231:13;224:31;316:4;307:7;303:18;296:4;287:7;283:18;273:49;350:9;335:13;328:32;378:4;366:16;;0:388;;;;573:41:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;212:1121::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.8;\n\nimport * as S from \"./Summary.sol\";\n\n/*\n* Contract mapping (hashed) real-world identifier to Ethereum address\n* and address of summary contract\n* Only authority can register new user\n*/\n\ncontract Registrar {\n\n\taddress public owner;\n\n\tstruct IDdata {\n\t\taddress ethAddr;\n\t\tstring description;\n\t\tuint8 role; // 0 - Patient, 1 - Provider, 2 - Researcher\n\t\tS.Summary summContract;\n\t}\n\t\n\tstruct userdata {\n\t\tstring identifier;\n\t\tstring description;\n\t\tuint8 role; // 0 - Patient, 1 - Provider, 2 - Researcher\n\t}\n\n\t// mapping of identifier to eth address\n\tmapping(string => IDdata) public IDlookup;\n\t\n\tmapping(address => userdata) public addrLookup;\n\n\t// events\n\t// event NewUserRegistered(string identifier);\n\n\tconstructor() public {\n\t\towner = msg.sender;\n\t}\n\n\t/* Register new user i.e. add newUser address to addressResgistry\n\t* Create new summary contract and add to contractRegistry\n\t*/\n\tfunction registerUser(string memory identifier, address newUser, string memory desc, uint8 roleIN) public {\n\t\trequire(msg.sender == owner);\n\t\t// require(registry[identifier] == address(0), \"User already exists\");\n\n\t\tS.Summary summ = new S.Summary(newUser);\n\t\tIDlookup[identifier] = IDdata(newUser, desc, roleIN, summ);\n\t\taddrLookup[newUser] = userdata(identifier, desc, roleIN);\n\t\t// emit NewUserRegistered(identifier);\n\t}\n}",
  "sourcePath": "/Users/mirashah/Documents/crowdmed/app/contracts/Registrar.sol",
  "ast": {
    "absolutePath": "/Users/mirashah/Documents/crowdmed/app/contracts/Registrar.sol",
    "exportedSymbols": {
      "Registrar": [
        185
      ],
      "S": [
        100
      ]
    },
    "id": 186,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 99,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/Users/mirashah/Documents/crowdmed/app/contracts/Summary.sol",
        "file": "./Summary.sol",
        "id": 100,
        "nodeType": "ImportDirective",
        "scope": 186,
        "sourceUnit": 651,
        "src": "25:35:2",
        "symbolAliases": [],
        "unitAlias": "S"
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          650
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 185,
        "linearizedBaseContracts": [
          185
        ],
        "name": "Registrar",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 102,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 185,
            "src": "235:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 101,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "235:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Registrar.IDdata",
            "id": 111,
            "members": [
              {
                "constant": false,
                "id": 104,
                "name": "ethAddr",
                "nodeType": "VariableDeclaration",
                "scope": 111,
                "src": "277:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 103,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "277:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 106,
                "name": "description",
                "nodeType": "VariableDeclaration",
                "scope": 111,
                "src": "296:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 105,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "296:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 108,
                "name": "role",
                "nodeType": "VariableDeclaration",
                "scope": 111,
                "src": "318:10:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 107,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "318:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 110,
                "name": "summContract",
                "nodeType": "VariableDeclaration",
                "scope": 111,
                "src": "377:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Summary_$650",
                  "typeString": "contract Summary"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 109,
                  "name": "S.Summary",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 650,
                  "src": "377:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Summary_$650",
                    "typeString": "contract Summary"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "IDdata",
            "nodeType": "StructDefinition",
            "scope": 185,
            "src": "259:144:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Registrar.userdata",
            "id": 118,
            "members": [
              {
                "constant": false,
                "id": 113,
                "name": "identifier",
                "nodeType": "VariableDeclaration",
                "scope": 118,
                "src": "427:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 112,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "427:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 115,
                "name": "description",
                "nodeType": "VariableDeclaration",
                "scope": 118,
                "src": "448:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 114,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "448:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 117,
                "name": "role",
                "nodeType": "VariableDeclaration",
                "scope": 118,
                "src": "470:10:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 116,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "470:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "userdata",
            "nodeType": "StructDefinition",
            "scope": 185,
            "src": "407:122:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 122,
            "name": "IDlookup",
            "nodeType": "VariableDeclaration",
            "scope": 185,
            "src": "573:41:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_IDdata_$111_storage_$",
              "typeString": "mapping(string => struct Registrar.IDdata)"
            },
            "typeName": {
              "id": 121,
              "keyType": {
                "id": 119,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "581:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "573:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_IDdata_$111_storage_$",
                "typeString": "mapping(string => struct Registrar.IDdata)"
              },
              "valueType": {
                "contractScope": null,
                "id": 120,
                "name": "IDdata",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 111,
                "src": "591:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_IDdata_$111_storage_ptr",
                  "typeString": "struct Registrar.IDdata"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 126,
            "name": "addrLookup",
            "nodeType": "VariableDeclaration",
            "scope": 185,
            "src": "619:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userdata_$118_storage_$",
              "typeString": "mapping(address => struct Registrar.userdata)"
            },
            "typeName": {
              "id": 125,
              "keyType": {
                "id": 123,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "627:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "619:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userdata_$118_storage_$",
                "typeString": "mapping(address => struct Registrar.userdata)"
              },
              "valueType": {
                "contractScope": null,
                "id": 124,
                "name": "userdata",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 118,
                "src": "638:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_userdata_$118_storage_ptr",
                  "typeString": "struct Registrar.userdata"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 134,
              "nodeType": "Block",
              "src": "750:26:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 129,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "754:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "762:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "762:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "754:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "754:18:2"
                }
              ]
            },
            "documentation": null,
            "id": 135,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "740:2:2"
            },
            "returnParameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "750:0:2"
            },
            "scope": 185,
            "src": "729:47:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 183,
              "nodeType": "Block",
              "src": "1015:316:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 147,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 665,
                            "src": "1027:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1027:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 149,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "1041:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1027:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 146,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        668,
                        669
                      ],
                      "referencedDeclaration": 668,
                      "src": "1019:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1019:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "1019:28:2"
                },
                {
                  "assignments": [
                    156
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 156,
                      "name": "summ",
                      "nodeType": "VariableDeclaration",
                      "scope": 183,
                      "src": "1125:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Summary_$650",
                        "typeString": "contract Summary"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 155,
                        "name": "S.Summary",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 650,
                        "src": "1125:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Summary_$650",
                          "typeString": "contract Summary"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 161,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 159,
                        "name": "newUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "1156:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1142:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Summary_$650_$",
                        "typeString": "function (address) returns (contract Summary)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 157,
                        "name": "S.Summary",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 650,
                        "src": "1146:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Summary_$650",
                          "typeString": "contract Summary"
                        }
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1142:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Summary_$650",
                      "typeString": "contract Summary"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1125:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 162,
                        "name": "IDlookup",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "1168:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_IDdata_$111_storage_$",
                          "typeString": "mapping(string memory => struct Registrar.IDdata storage ref)"
                        }
                      },
                      "id": 164,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 163,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "1177:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1168:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IDdata_$111_storage",
                        "typeString": "struct Registrar.IDdata storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 166,
                          "name": "newUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "1198:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 167,
                          "name": "desc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "1207:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 168,
                          "name": "roleIN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 143,
                          "src": "1213:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 169,
                          "name": "summ",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 156,
                          "src": "1221:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Summary_$650",
                            "typeString": "contract Summary"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_contract$_Summary_$650",
                            "typeString": "contract Summary"
                          }
                        ],
                        "id": 165,
                        "name": "IDdata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "1191:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_IDdata_$111_storage_ptr_$",
                          "typeString": "type(struct Registrar.IDdata storage pointer)"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1191:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IDdata_$111_memory",
                        "typeString": "struct Registrar.IDdata memory"
                      }
                    },
                    "src": "1168:58:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IDdata_$111_storage",
                      "typeString": "struct Registrar.IDdata storage ref"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "1168:58:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 173,
                        "name": "addrLookup",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "1230:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userdata_$118_storage_$",
                          "typeString": "mapping(address => struct Registrar.userdata storage ref)"
                        }
                      },
                      "id": 175,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 174,
                        "name": "newUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "1241:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1230:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_userdata_$118_storage",
                        "typeString": "struct Registrar.userdata storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 177,
                          "name": "identifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 137,
                          "src": "1261:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 178,
                          "name": "desc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "1273:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 179,
                          "name": "roleIN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 143,
                          "src": "1279:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 176,
                        "name": "userdata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "1252:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_userdata_$118_storage_ptr_$",
                          "typeString": "type(struct Registrar.userdata storage pointer)"
                        }
                      },
                      "id": 180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1252:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_userdata_$118_memory",
                        "typeString": "struct Registrar.userdata memory"
                      }
                    },
                    "src": "1230:56:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_userdata_$118_storage",
                      "typeString": "struct Registrar.userdata storage ref"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "1230:56:2"
                }
              ]
            },
            "documentation": null,
            "id": 184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "931:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "931:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "name": "newUser",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "957:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "957:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "name": "desc",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "974:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "974:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "name": "roleIN",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "994:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "994:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "930:77:2"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1015:0:2"
            },
            "scope": 185,
            "src": "909:422:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 186,
        "src": "212:1121:2"
      }
    ],
    "src": "0:1333:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/mirashah/Documents/crowdmed/app/contracts/Registrar.sol",
    "exportedSymbols": {
      "Registrar": [
        185
      ],
      "S": [
        100
      ]
    },
    "id": 186,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 99,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/Users/mirashah/Documents/crowdmed/app/contracts/Summary.sol",
        "file": "./Summary.sol",
        "id": 100,
        "nodeType": "ImportDirective",
        "scope": 186,
        "sourceUnit": 651,
        "src": "25:35:2",
        "symbolAliases": [],
        "unitAlias": "S"
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          650
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 185,
        "linearizedBaseContracts": [
          185
        ],
        "name": "Registrar",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 102,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 185,
            "src": "235:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 101,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "235:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Registrar.IDdata",
            "id": 111,
            "members": [
              {
                "constant": false,
                "id": 104,
                "name": "ethAddr",
                "nodeType": "VariableDeclaration",
                "scope": 111,
                "src": "277:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 103,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "277:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 106,
                "name": "description",
                "nodeType": "VariableDeclaration",
                "scope": 111,
                "src": "296:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 105,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "296:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 108,
                "name": "role",
                "nodeType": "VariableDeclaration",
                "scope": 111,
                "src": "318:10:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 107,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "318:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 110,
                "name": "summContract",
                "nodeType": "VariableDeclaration",
                "scope": 111,
                "src": "377:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Summary_$650",
                  "typeString": "contract Summary"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 109,
                  "name": "S.Summary",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 650,
                  "src": "377:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Summary_$650",
                    "typeString": "contract Summary"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "IDdata",
            "nodeType": "StructDefinition",
            "scope": 185,
            "src": "259:144:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Registrar.userdata",
            "id": 118,
            "members": [
              {
                "constant": false,
                "id": 113,
                "name": "identifier",
                "nodeType": "VariableDeclaration",
                "scope": 118,
                "src": "427:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 112,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "427:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 115,
                "name": "description",
                "nodeType": "VariableDeclaration",
                "scope": 118,
                "src": "448:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 114,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "448:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 117,
                "name": "role",
                "nodeType": "VariableDeclaration",
                "scope": 118,
                "src": "470:10:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 116,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "470:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "userdata",
            "nodeType": "StructDefinition",
            "scope": 185,
            "src": "407:122:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 122,
            "name": "IDlookup",
            "nodeType": "VariableDeclaration",
            "scope": 185,
            "src": "573:41:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_IDdata_$111_storage_$",
              "typeString": "mapping(string => struct Registrar.IDdata)"
            },
            "typeName": {
              "id": 121,
              "keyType": {
                "id": 119,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "581:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "573:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_IDdata_$111_storage_$",
                "typeString": "mapping(string => struct Registrar.IDdata)"
              },
              "valueType": {
                "contractScope": null,
                "id": 120,
                "name": "IDdata",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 111,
                "src": "591:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_IDdata_$111_storage_ptr",
                  "typeString": "struct Registrar.IDdata"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 126,
            "name": "addrLookup",
            "nodeType": "VariableDeclaration",
            "scope": 185,
            "src": "619:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userdata_$118_storage_$",
              "typeString": "mapping(address => struct Registrar.userdata)"
            },
            "typeName": {
              "id": 125,
              "keyType": {
                "id": 123,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "627:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "619:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userdata_$118_storage_$",
                "typeString": "mapping(address => struct Registrar.userdata)"
              },
              "valueType": {
                "contractScope": null,
                "id": 124,
                "name": "userdata",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 118,
                "src": "638:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_userdata_$118_storage_ptr",
                  "typeString": "struct Registrar.userdata"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 134,
              "nodeType": "Block",
              "src": "750:26:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 129,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "754:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "762:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "762:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "754:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "754:18:2"
                }
              ]
            },
            "documentation": null,
            "id": 135,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "740:2:2"
            },
            "returnParameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "750:0:2"
            },
            "scope": 185,
            "src": "729:47:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 183,
              "nodeType": "Block",
              "src": "1015:316:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 147,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 665,
                            "src": "1027:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1027:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 149,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "1041:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1027:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 146,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        668,
                        669
                      ],
                      "referencedDeclaration": 668,
                      "src": "1019:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1019:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "1019:28:2"
                },
                {
                  "assignments": [
                    156
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 156,
                      "name": "summ",
                      "nodeType": "VariableDeclaration",
                      "scope": 183,
                      "src": "1125:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Summary_$650",
                        "typeString": "contract Summary"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 155,
                        "name": "S.Summary",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 650,
                        "src": "1125:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Summary_$650",
                          "typeString": "contract Summary"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 161,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 159,
                        "name": "newUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "1156:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1142:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Summary_$650_$",
                        "typeString": "function (address) returns (contract Summary)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 157,
                        "name": "S.Summary",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 650,
                        "src": "1146:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Summary_$650",
                          "typeString": "contract Summary"
                        }
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1142:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Summary_$650",
                      "typeString": "contract Summary"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1125:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 162,
                        "name": "IDlookup",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "1168:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_IDdata_$111_storage_$",
                          "typeString": "mapping(string memory => struct Registrar.IDdata storage ref)"
                        }
                      },
                      "id": 164,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 163,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "1177:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1168:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IDdata_$111_storage",
                        "typeString": "struct Registrar.IDdata storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 166,
                          "name": "newUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "1198:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 167,
                          "name": "desc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "1207:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 168,
                          "name": "roleIN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 143,
                          "src": "1213:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 169,
                          "name": "summ",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 156,
                          "src": "1221:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Summary_$650",
                            "typeString": "contract Summary"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_contract$_Summary_$650",
                            "typeString": "contract Summary"
                          }
                        ],
                        "id": 165,
                        "name": "IDdata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "1191:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_IDdata_$111_storage_ptr_$",
                          "typeString": "type(struct Registrar.IDdata storage pointer)"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1191:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IDdata_$111_memory",
                        "typeString": "struct Registrar.IDdata memory"
                      }
                    },
                    "src": "1168:58:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IDdata_$111_storage",
                      "typeString": "struct Registrar.IDdata storage ref"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "1168:58:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 173,
                        "name": "addrLookup",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "1230:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userdata_$118_storage_$",
                          "typeString": "mapping(address => struct Registrar.userdata storage ref)"
                        }
                      },
                      "id": 175,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 174,
                        "name": "newUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "1241:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1230:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_userdata_$118_storage",
                        "typeString": "struct Registrar.userdata storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 177,
                          "name": "identifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 137,
                          "src": "1261:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 178,
                          "name": "desc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "1273:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 179,
                          "name": "roleIN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 143,
                          "src": "1279:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 176,
                        "name": "userdata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "1252:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_userdata_$118_storage_ptr_$",
                          "typeString": "type(struct Registrar.userdata storage pointer)"
                        }
                      },
                      "id": 180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1252:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_userdata_$118_memory",
                        "typeString": "struct Registrar.userdata memory"
                      }
                    },
                    "src": "1230:56:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_userdata_$118_storage",
                      "typeString": "struct Registrar.userdata storage ref"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "1230:56:2"
                }
              ]
            },
            "documentation": null,
            "id": 184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "931:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "931:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "name": "newUser",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "957:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "957:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "name": "desc",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "974:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "974:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "name": "roleIN",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "994:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "994:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "930:77:2"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1015:0:2"
            },
            "scope": 185,
            "src": "909:422:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 186,
        "src": "212:1121:2"
      }
    ],
    "src": "0:1333:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "58343": {
      "events": {},
      "links": {},
      "address": "0xF9C59f1C1e98B8A00Cd4E99BDf47638F1A8A9aD6",
      "transactionHash": "0x33c5456653bd041aeba17211ee1153fdca603ed2d0fb28352b86260ecd389861"
    },
    "1587281698113": {
      "events": {},
      "links": {},
      "address": "0x4feA27839E8334BE828085f6cD2fBEb59344D273",
      "transactionHash": "0x6a2577182b6c9ccd36c934115bbbcd3875bbd25a37dd72c220157cad34779d54"
    },
    "1588560370518": {
      "events": {},
      "links": {},
      "address": "0x4feA27839E8334BE828085f6cD2fBEb59344D273",
      "transactionHash": "0x6a2577182b6c9ccd36c934115bbbcd3875bbd25a37dd72c220157cad34779d54"
    },
    "1588560442622": {
      "events": {},
      "links": {},
      "address": "0x4feA27839E8334BE828085f6cD2fBEb59344D273",
      "transactionHash": "0x6a2577182b6c9ccd36c934115bbbcd3875bbd25a37dd72c220157cad34779d54"
    },
    "1588575235180": {
      "events": {},
      "links": {},
      "address": "0x4feA27839E8334BE828085f6cD2fBEb59344D273",
      "transactionHash": "0xc5580c768054255168bff426d9fed16efab5b6c591838376fa3a908385fbf1c9"
    },
    "1589179669793": {
      "events": {},
      "links": {},
      "address": "0x4feA27839E8334BE828085f6cD2fBEb59344D273",
      "transactionHash": "0xc5580c768054255168bff426d9fed16efab5b6c591838376fa3a908385fbf1c9"
    },
    "1589182601897": {
      "events": {},
      "links": {},
      "address": "0x4feA27839E8334BE828085f6cD2fBEb59344D273",
      "transactionHash": "0xc5580c768054255168bff426d9fed16efab5b6c591838376fa3a908385fbf1c9"
    }
  },
  "schemaVersion": "3.0.12",
  "updatedAt": "2020-05-11T07:37:07.482Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}